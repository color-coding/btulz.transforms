/**
 * @license
 * Copyright Color-Coding Studio. All Rights Reserved.
 *
 * Use of this source code is governed by an Apache License, Version 2.0
 * that can be found in the LICENSE file at http://www.apache.org/licenses/LICENSE-2.0
 */
namespace ${Domain.getName().toLowerCase()} {
    export namespace ui {
        export namespace m {
            /** 查看视图-${BO.getDescription()} */
            export class ${BO.getName()}ViewView extends ibas.BOViewView implements app.I${BO.getName()}ViewView {
                /** 绘制视图 */
                draw(): any {
                    let that: this = this;
                    return this.page = new sap.extension.uxap.DataObjectPageLayout("", {
                        dataInfo: {
                            code: bo.${BO.getName()}.BUSINESS_OBJECT_CODE,
                        },
                        userFieldsMode: "text",
                        showFooter: false,
                        headerTitle: new sap.uxap.ObjectPageHeader("", {
                            sideContentButton: new sap.m.Button("", {
                                text: ibas.i18n.prop("shell_data_edit"),
                                type: sap.m.ButtonType.Transparent,
                                icon: "sap-icon://edit",
                                press(): void {
                                    that.fireViewEvents(that.editDataEvent);
                                }
                            }),
                            actions: [
                                new sap.uxap.ObjectPageHeaderActionButton("", {
                                    hideText: true,
                                    importance: sap.uxap.Importance.Medium,
                                    text: ibas.i18n.prop("shell_data_services"),
                                    type: sap.m.ButtonType.Transparent,
                                    icon: "sap-icon://action",
                                    press(event: sap.ui.base.Event): void {
                                        ibas.servicesManager.showServices({
                                            proxy: new ibas.BOServiceProxy({
                                                data: that.page.getModel().getData(),
                                                converter: new bo.DataConverter(),
                                            }),
                                            displayServices(services: ibas.IServiceAgent[]): void {
                                                if (ibas.objects.isNull(services) || services.length === 0) {
                                                    return;
                                                }
                                                let actionSheet: sap.m.ActionSheet = new sap.m.ActionSheet("", {
                                                    placement: sap.m.PlacementType.Bottom,
                                                    buttons: {
                                                        path: "/",
                                                        template: new sap.m.Button("", {
                                                            type: sap.m.ButtonType.Transparent,
                                                            text: {
                                                                path: "name",
                                                                type: new sap.extension.data.Alphanumeric(),
                                                                formatter(data: string): string {
                                                                    return data ? ibas.i18n.prop(data) : "";
                                                                }
                                                            },
                                                            icon: {
                                                                path: "icon",
                                                                type: new sap.extension.data.Alphanumeric(),
                                                                formatter(data: string): string {
                                                                    return data ? data : "sap-icon://e-care";
                                                                }
                                                            },
                                                            press(this: sap.m.Button): void {
                                                                let service: ibas.IServiceAgent = this.getBindingContext().getObject();
                                                                if (service) {
                                                                    service.run();
                                                                }
                                                            }
                                                        })
                                                    }
                                                });
                                                actionSheet.setModel(new sap.extension.model.JSONModel(services));
                                                actionSheet.openBy(event.getSource());
                                            }
                                        });
                                    }
                                }),
                            ],
                        }),
                        headerContent: [
                        ],
                        sections: [
                            new sap.uxap.ObjectPageSection("", {
                                title: ibas.i18n.prop("${Domain.getName().toLowerCase()}_title_general"),
                                subSections: [
                                    new sap.uxap.ObjectPageSubSection("", {
                                        blocks: [
                                            new sap.ui.layout.form.SimpleForm("", {
                                                editable: false,
                                                width: "auto",
                                                content: [
$BEGIN_BO_MODEL$
$BEGIN_MODEL_PROPERTY$
                                                    new sap.m.Label("", { text: ibas.i18n.prop("bo_${Model.getName().toLowerCase()}_${Property.getName().toLowerCase()}") }),
                                                    ${Property.output(ui.Text)},
$END_MODEL_PROPERTY$
$END_BO_MODEL$
                                                ]
                                            }).addStyleClass("sapUxAPObjectPageSubSectionAlignContent"),
                                        ]
                                    }),
                                ]
                            }),
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
                            new sap.uxap.ObjectPageSection("", {
                                title: ibas.i18n.prop("bo_${BOItem.getName().toLowerCase()}"),
                                subSections: [
                                    new sap.uxap.ObjectPageSubSection("", {
                                        blocks: [
                                            this.list${BOItem.getName()} = new sap.extension.m.List("", {
                                                inset: false,
                                                width: "auto",
                                                growing: false,
                                                mode: sap.m.ListMode.None,
                                                swipeDirection: sap.m.SwipeDirection.RightToLeft,
                                                backgroundDesign: sap.m.BackgroundDesign.Transparent,
                                                showNoData: true,
                                                items: {
                                                    path: "/rows",
                                                    template: new sap.extension.m.DataObjectListItem("", {
                                                        dataInfo: {
                                                            code: bo.${BO.getName()}.BUSINESS_OBJECT_CODE,
                                                            name: bo.${BOItem.getName()}.name
                                                        },
                                                        title: "# {lineId}",
                                                        attributes: [
$BEGIN_BOITEM_MODEL$
$BEGIN_MODEL_PROPERTY$
                                                            ${Property.output(ui.object)},
$END_MODEL_PROPERTY$
$END_BOITEM_MODEL$
                                                        ],
                                                        type: sap.m.ListType.Active,
                                                        press: function (oEvent: sap.ui.base.Event): void {
                                                            that.view${BOItem.getName()}(this.getBindingContext().getObject());
                                                        },
                                                    })
                                                },
                                            }).addStyleClass("sapUxAPObjectPageSubSectionAlignContent"),
                                        ]
                                    }),
                                ]
                            }),
$END_BOITEM_RELATION_IS_ONETOMANY$
$END_BOITEM$
                        ]
                    });
                }

                private page: sap.extension.uxap.ObjectPageLayout;
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
                private list${BOItem.getName()}: sap.extension.m.List;
$END_BOITEM_RELATION_IS_ONETOMANY$
$END_BOITEM$

                /** 显示数据 */
                show${BO.getName()}(data: bo.${BO.getName()}): void {
                    this.page.setModel(new sap.extension.model.JSONModel(data));
                    // 改变页面状态
                    sap.extension.pages.changeStatus(this.page);
                }
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
                /** 显示数据（${BOItem.getDescription()}） */
                show${BOItem.getName()}s(datas: bo.${BOItem.getName()}[]): void {
                    this.list${BOItem.getName()}.setModel(new sap.extension.model.JSONModel({ rows: datas }));
                }
                /** 编辑数据行（${BOItem.getDescription()}） */
                view${BOItem.getName()}(data: bo.${BOItem.getName()}): void {
                    let that: this = this;
                    let editForm: sap.m.Dialog = <any>sap.ui.getCore().byId(this.id + "_editform");
                    if (!(editForm instanceof sap.m.Dialog)) {
                        editForm = new sap.m.Dialog(this.id + "_editform", {
							title: ibas.strings.format("{0} - {1}", ibas.i18n.prop("bo_${BOItem.getName().toLowerCase()}"), data.lineId),
							type: sap.m.DialogType.Standard,
							state: sap.ui.core.ValueState.None,
							stretch: ibas.config.get(ibas.CONFIG_ITEM_PLANTFORM) === ibas.emPlantform.PHONE ? true : false,
							horizontalScrolling: true,
							verticalScrolling: true,
							content: [
								new sap.extension.layout.DataSimpleForm("", {
									editable: false,
									userFieldsTitle: "",
									userFieldsMode: "text",
									dataInfo: {
										code: bo.${BO.getName()}.BUSINESS_OBJECT_CODE,
										name: bo.${BOItem.getName()}.name,
									},
									content: [
$BEGIN_BOITEM_MODEL$
$BEGIN_MODEL_PROPERTY$
										new sap.m.Label("", { text: ibas.i18n.prop("bo_${Model.getName().toLowerCase()}_${Property.getName().toLowerCase()}") }),
										${Property.output(ui.Text)},
$END_MODEL_PROPERTY$
$END_BOITEM_MODEL$
									],
								}),
							],
							buttons: [
								new sap.m.Button("", {
									width: "20%",
									icon: "sap-icon://arrow-left",
									type: sap.m.ButtonType.Transparent,
									press(): void {
										let form: any = editForm.getContent()[0];
										if (form instanceof sap.extension.layout.SimpleForm) {
											let datas: any = that.list${BOItem.getName()}.getModel().getData("rows");
											if (datas instanceof Array && datas.length > 0) {
												let index: number = datas.indexOf(form.getModel().getData());
												index = index <= 0 ? datas.length - 1 : index - 1;
												form.setModel(new sap.extension.model.JSONModel(datas[index]));
												editForm.setTitle(ibas.strings.format("{0} - {1}", ibas.i18n.prop("bo_${BOItem.getName().toLowerCase()}"), datas[index].lineId));
											} else {
												that.application.viewShower.messages({
													title: that.title,
													type: ibas.emMessageType.WARNING,
													message: ibas.i18n.prop(["shell_please", "shell_data_add_line"]),
												});
											}
										}
									}
								}),
								new sap.m.Button("", {
									width: "20%",
									icon: "sap-icon://arrow-right",
									type: sap.m.ButtonType.Transparent,
									press(): void {
										let form: any = editForm.getContent()[0];
										if (form instanceof sap.extension.layout.SimpleForm) {
											let datas: any = that.list${BOItem.getName()}.getModel().getData("rows");
											if (datas instanceof Array && datas.length > 0) {
												let index: number = datas.indexOf(form.getModel().getData());
												index = index >= datas.length - 1 ? 0 : index + 1;
												form.setModel(new sap.extension.model.JSONModel(datas[index]));
												editForm.setTitle(ibas.strings.format("{0} - {1}", ibas.i18n.prop("bo_${BOItem.getName().toLowerCase()}"), datas[index].lineId));
											} else {
												that.application.viewShower.messages({
													title: that.title,
													type: ibas.emMessageType.WARNING,
													message: ibas.i18n.prop(["shell_please", "shell_data_add_line"]),
												});
											}
										}
									}
								}),
								new sap.m.Button("", {
									text: ibas.i18n.prop("shell_exit"),
									type: sap.m.ButtonType.Transparent,
									press(): void {
										editForm.close();
									}
								}),
							]
						}).addStyleClass("sapUiNoContentPadding");
                    }
                    editForm.getContent()[0].setModel(new sap.extension.model.JSONModel(data));
                    editForm.open();
                }
$END_BOITEM_RELATION_IS_ONETOMANY$
$END_BOITEM$
                protected onClosed(): void {
                    super.onClosed();
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
                    let form: any = sap.ui.getCore().byId(this.id + "_editform");
                    if (form instanceof sap.m.Dialog) {
                        form.destroy();
                    }
$END_BOITEM_RELATION_IS_ONETOMANY$
$END_BOITEM$
                }
            }
        }
    }
}