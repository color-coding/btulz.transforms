<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
$$适用于java平台下的ibas框架
<ns2:DataStructureOrchestration
    xmlns:ns2="http://colorcoding.org/btulz/transformers">
    <Name>ds_pgsql_ibas</Name>
    <Description>基于PGSQL的结构映射说明</Description>
    <Integrated>true</Integrated>
    <DriverName>org.postgresql.Driver</DriverName>
$$此数据库不支持跨库操作，所以需要先创建数据库。
    <DbUrl>jdbc:postgresql://${DbServer}:${DbPort}/${DbName}</DbUrl>
    <DbUser>${DbUser}</DbUser>
    <DbPassword>${DbPassword}</DbPassword>
$$"!"表示延迟解析变量，例如${!Property.getEditSize()}
$$设置为隔离动作（Isolated = true），此动作独立数据库事务，若已存在事务，则提交。提供了数据库地址则创建连接。
    <Action Name="create db" Isolated="true" DbUrl="jdbc:postgresql://${DbServer}:${DbPort}/postgres">
        <Step Name="check db ${DbName} exists">
            <Script>
                SELECT COUNT(0) FROM "pg_database" WHERE "datname" = '${DbName}'
            </Script>
        </Step>
        <Step Name="create db ${DbName}" RunOnValue="0">
            <Script>
                CREATE DATABASE "${DbName}"
            </Script>
        </Step>
    </Action>
$BEGIN_MODEL$
    <Action Name="create table">
        <Step Name="check table ${Model.getMapped()} exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Model.getMapped()}'
            </Script>
        </Step>
        <Step Name="create table ${Model.getMapped()}" RunOnValue="0">
            <Script>
                CREATE TABLE "${Model.getMapped()}"(
$BEGIN_MODEL_PROPERTY$
                   "${Property.getMapped()}" ${Property.getMappedType()} DEFAULT ${Property.getDefaultValue(DB)} ${Property.getSeparator(,)}
$END_MODEL_PROPERTY$
                )
            </Script>
        </Step>
$BEGIN_MODEL_PROPERTY$
        <Step Name="check field ${Model.getMapped()}.${Property.getMapped()} exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."columns" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Model.getMapped()}' AND "column_name" = '${Property.getMapped()}'
            </Script>
        </Step>
        <Step Name="create field ${Model.getMapped()}.${Property.getMapped()}" RunOnValue="0">
            <Script>
                ALTER TABLE "${Model.getMapped()}" ADD "${Property.getMapped()}" ${Property.getMappedType()} DEFAULT ${Property.getDefaultValue(DB)}
            </Script>
        </Step>
$END_MODEL_PROPERTY$
$BEGIN_MODEL_HAS_PRIMARY$
        <Step Name="check ${Model.getMapped()}'s key fields exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."table_constraints" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Model.getMapped()}' AND "constraint_type" = 'PRIMARY KEY'
            </Script>
        </Step>
        <Step Name="create ${Model.getMapped()}'s key fields" RunOnValue="0">
            <Script>
                ALTER TABLE "${Model.getMapped()}" ADD PRIMARY KEY (
$BEGIN_MODEL_PRIMARY_PROPERTY$
                    "${Property.getMapped()}" ${Property.getSeparator(,)}
$END_MODEL_PRIMARY_PROPERTY$
                )
            </Script>
        </Step>
$END_MODEL_HAS_PRIMARY$
    </Action>
    <Action Name="drop table unique index">
        <Step Name="check and delete table ${Model.getMapped()}'s unique index">
            <Script>
                DROP INDEX IF EXISTS "${Model.getMapped().toUpperCase()}_UNIQUE_INDEX"
            </Script>
        </Step>
    </Action>
$BEGIN_MODEL_HAS_UNIQUE$
    <Action Name="create table unique index">
        <Step Name="create table ${Model.getMapped()}'s unique index">
            <Script>
                CREATE UNIQUE INDEX "${Model.getMapped().toUpperCase()}_UNIQUE_INDEX" ON "${Model.getMapped()}" (
$BEGIN_MODEL_UNIQUE_PROPERTY$
                    "${Property.getMapped()}" ${Property.getSeparator(,)}
$END_MODEL_UNIQUE_PROPERTY$
                )
            </Script>
        </Step>
    </Action>
$END_MODEL_HAS_UNIQUE$
$END_MODEL$
$BEGIN_BO$
    <Action Name="register business object" KeepStepResult="false">
        <Step Name="check number table exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Company}_SYS_ONNM'
            </Script>
        </Step>
        <Step Name="check business object code ${BO.getShortName()} exists" RunOnValue="1">
            <Script>
                SELECT COUNT(0) FROM "${Company}_SYS_ONNM" WHERE "ObjectCode" = N'${BO.getShortName()}'
            </Script>
        </Step>
        <Step Name="register business object ${BO.getShortName()} code" RunOnValue="0">
            <Script>
                INSERT INTO "${Company}_SYS_ONNM" ("ObjectCode", "AutoKey", "DocSubType") VALUES (N'${BO.getShortName()}', 1, '--')
            </Script>
        </Step>
    </Action>
$BEGIN_BO_MODEL$
    <Action Name="register business object informations">
        <Step Name="check business object informations table exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Company}_SYS_OBOI'
            </Script>
        </Step>
        <Step Name="delete business object ${Model.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_OBOI" WHERE "Code" = N'${BO.getShortName()}'
            </Script>
        </Step>
        <Step Name="register business object ${Model.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_OBOI"("Code", "Name", "Descrp", "Mapped", "ObjectType") VALUES (N'${BO.getShortName()}', N'${Model.getName()}', N'${Model.getDescription()}', N'${Model.getMapped().toUpperCase()}', N'${Model.getModelType()}')
            </Script>
        </Step>
        <Step Name="check business object informations table exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Company}_SYS_BOI1'
            </Script>
        </Step>
$BEGIN_MODEL_PROPERTY$
        <Step Name="delete business object ${Model.getName()}.${Property.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BO.getShortName()}' AND "Property" = N'${Property.getName()}'
            </Script>
        </Step>
        <Step Name="register business object ${Model.getName()}.${Property.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BO.getShortName()}', N'${Property.getName()}', N'${Property.getMapped()}', N'${Property.getDescription()}', N'${Property.getDataType()}', N'${Property.getDataSubType()}', ${Property.getEditSize()}, N'${Property.isSearched(DB)}', N'${Property.isSystemed()}')
            </Script>
        </Step>
$END_MODEL_PROPERTY$
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
        <Step Name="delete business object property ${BOItem.getName()}s.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BOItem.getParent().getShortName()}' AND "Property" = N'${BOItem.getName()}s'
            </Script>
        </Step>
        <Step Name="register business object property ${BOItem.getName()}s.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BOItem.getParent().getShortName()}', N'${BOItem.getName()}s', N'${BOItem.getShortName(index)}', N'${BOItem.getDescription()}', N'${BOItem.getName()}', NULL, -1, N'N', N'Y')
            </Script>
        </Step>
$END_BOITEM_RELATION_IS_ONETOMANY$
$BEGIN_BOITEM_RELATION_IS_ONETOONE$
        <Step Name="delete business object property ${BOItem.getName()}.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BOItem.getParent().getShortName()}' AND "Property" = N'${BOItem.getName()}'
            </Script>
        </Step>
        <Step Name="register business object property ${BOItem.getName()}.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BOItem.getParent().getShortName()}', N'${BOItem.getName()}', N'${BOItem.getShortName(index)}', N'${BOItem.getDescription()}', N'${BOItem.getName()}', NULL, -1, N'N', N'Y')
            </Script>
        </Step>
$END_BOITEM_RELATION_IS_ONETOONE$
$END_BOITEM$
    </Action>
$END_BO_MODEL$
$BEGIN_BOITEMS$
    <Action Name="register business object informations">
$BEGIN_BO_MODEL$
        <Step Name="check business object informations table exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Company}_SYS_OBOI'
            </Script>
        </Step>
        <Step Name="delete business object ${Model.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_OBOI" WHERE "Code" = N'${BO.getShortName(index)}'
            </Script>
        </Step>
        <Step Name="register business object ${Model.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_OBOI"("Code", "Name", "Descrp", "Mapped", "ObjectType") VALUES (N'${BO.getShortName(index)}', N'${Model.getName()}', N'${Model.getDescription()}', N'${Model.getMapped().toUpperCase()}', N'${Model.getModelType()}')
            </Script>
        </Step>
        <Step Name="check business object informations table exists">
            <Script>
                SELECT COUNT(0) FROM "information_schema"."tables" WHERE "table_catalog" = '${DbName}' AND "table_name" = '${Company}_SYS_BOI1'
            </Script>
        </Step>
$BEGIN_MODEL_PROPERTY$
        <Step Name="delete business object ${Model.getName()}.${Property.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BO.getShortName(index)}' AND "Property" = N'${Property.getName()}'
            </Script>
        </Step>
        <Step Name="register business object ${Model.getName()}.${Property.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BO.getShortName(index)}', N'${Property.getName()}', N'${Property.getMapped()}', N'${Property.getDescription()}', N'${Property.getDataType()}', N'${Property.getDataSubType()}', ${Property.getEditSize()}, N'${Property.isSearched(DB)}', N'${Property.isSystemed()}')
            </Script>
        </Step>
$END_MODEL_PROPERTY$
$END_BO_MODEL$
$BEGIN_BOITEM$
$BEGIN_BOITEM_RELATION_IS_ONETOMANY$
        <Step Name="delete business object property ${BOItem.getName()}s.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BOItem.getParent().getShortName(index)}' AND "Property" = N'${BOItem.getName()}s'
            </Script>
        </Step>
        <Step Name="register business object property ${BOItem.getName()}s.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BOItem.getParent().getShortName(index)}', N'${BOItem.getName()}s', N'${BOItem.getShortName(index)}', N'${BOItem.getDescription()}', N'${BOItem.getName()}', NULL, -1, N'N', N'Y')
            </Script>
        </Step>
$END_BOITEM_RELATION_IS_ONETOMANY$
$BEGIN_BOITEM_RELATION_IS_ONETOONE$
        <Step Name="delete business object property ${BOItem.getName()}.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                DELETE FROM "${Company}_SYS_BOI1" WHERE "Code" = N'${BOItem.getParent().getShortName(index)}' AND "Property" = N'${BOItem.getName()}'
            </Script>
        </Step>
        <Step Name="register business object property ${BOItem.getName()}.${BOItem.getName()}'s informations" RunOnValue="1">
            <Script>
                INSERT INTO "${Company}_SYS_BOI1" ("Code", "Property", "Mapped", "Descrp", "DataType", "EditType", "EditSize", "Searched", "Systemed") VALUES (N'${BOItem.getParent().getShortName(index)}', N'${BOItem.getName()}', N'${BOItem.getShortName(index)}', N'${BOItem.getDescription()}', N'${BOItem.getName()}', NULL, -1, N'N', N'Y')
            </Script>
        </Step>
$END_BOITEM_RELATION_IS_ONETOONE$
$END_BOITEM$
    </Action>
$END_BOITEMS$
$END_BO$
</ns2:DataStructureOrchestration>